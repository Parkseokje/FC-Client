{"version":3,"sources":["video_aqua.js"],"names":["window","requirejs","btnPlayNext","Timer","course_id","course_list_id","type","url","data","console","msg","playerContainer","done","res","success","error","href","location","nextUrl","showPlayBtn","removeClass","btnReplayVideo","addClass","deleteVideoLog","deleteSessionLog","params","then","response","axios","delete","training_user_id","catch","waitMessage","$","timer","autoplay","osName","Util","getOSName","attr","courseListId","videoId","videoStatus","totalPlayedSeconds","courseId","AquaNManagerService","setTimeout","options","startValues","countdown","getTimeValues","toString","html","e","addEventListener","alert","all","spread","acct","perms","log","btnPlayVideo","sessionProgressStartLogger","on","startPlayer","click","event","preventDefault","stop","sessionProgressEndLogger"],"mappings":"YAAAA,QAAOC,WAAPD,SAQE,sBACA,YACA,eAEA,SAAIE,EAAAA,EAAgBC,GA0EdC,QAAAA,KACAC,EAAAA,MAHIC,KAAA,OAHRC,IAAA,yBASEC,MACEC,iBAAkBC,EAAlBF,KAAA,oBACDJ,UAAAO,EAAAH,KAAA,aAXHH,eAAAM,EAAAH,KAAA,qBAQGI,KAAK,SAAUC,GAOpBA,EAAAC,SALML,QAAQM,MAAMF,EAAIH,OAwBlBN,QAAAA,KACAC,EAAAA,MAHIC,KAAA,OAHRC,IAAA,uBASEC,MACEC,iBAAkBC,EAAlBF,KAAA,oBADFJ,UAEOO,EAAAH,KAAA,aACLR,eAAgBgB,EAAhBR,KAAA,qBAZJI,KAAA,SAAAC,GAeDA,EAAAC,QAHKd,OAAOiB,SAASD,KAAOE,EAFvBT,QAAQM,MAAMF,EAAIH,OAUxB,QAASS,KAOT,SAAAR,EAAAH,KAAA,YALIN,EAAYkB,YAAY,SACxBC,EAAeC,SAAS,UAkD5B,QAAAC,KACA,MAASC,OAAAA,OAAAA,cACPC,QACEA,SAAQd,EAAAH,KAAA,SAAAkB,KAAA,SAAAC,MAQRlB,MAAAA,SAAcM,GAThBN,QAAAM,MAAAA,KADF,QAASS,KACP,MAAOI,OAAMC,OAAO,gBAClBJ,QACEK,iBAAkBnB,EAAgBH,KAAK,oBACvCH,eAAgBM,EAAgBH,KAAK,qBAGxCkB,KAAK,SAAUC,MAEfI,MAAM,SAAUhB,GACfN,QAAQM,MAAMA,KApLlB,GAAIM,GAAAA,GAAAA,OAAAA,EACAW,EAAgBC,EAAA,gBAChBC,EAAY/B,EAAJ,mBACRgC,EAAWxB,EAAAA,kBACXyB,EAASC,EAAKC,SAAlBC,KAAA,QAJIlB,EAAiBY,EAAE,qBAMvBD,EAAAC,EAAA,sBACAC,EAAA,GAAA/B,GAJIgC,EAAWxB,EAAgBH,KAAK,YAMlC4B,EAAAC,EAAYC,WAKVE,GAAAA,WACAC,GAAAA,IACAC,SAAAA,EAAa/B,KAAgBH,OAC7BmC,eAAAA,EAAoBhC,KAAgBH,oBAPtCoC,SAAAjC,EAAAH,KAAA,aASAqC,aAAAA,EAA0BA,KAAAA,kBAJxBJ,QAAS9B,EAAgBH,KAAK,MAMhCkC,YAAI/B,EAAqBH,KAArB,UACFyB,mBAAYb,EAAZZ,KAAA,cAEAsC,GAAW,GAAYD,GAAAE,GAESC,KAA9Bd,EAAae,KAAAA,aAJfhB,EAAE,UAAUb,YAAY,SAExB0B,WAAW,WAOPd,EAAAA,OAAAA,WAAiBE,EAAMgB,aAAgBC,QAAtB,MAHnBnB,EAAYoB,KAAKlB,EAAMgB,gBAAgBC,WAAa,+BAOlDnB,EAAAA,iBAAiB,iBAAjB,SAAAqB,GAJArB,EAAYoB,KAAKlB,EAAMgB,gBAAgBC,WAAa,iCAGtDjB,EAAMoB,iBAAiB,iBAAkB,SAAUD,GAM/CzB,EAAUwB,KAAE7B,iBAGXuB,WAHD,WAHF9C,OAAAuD,MAAA,yDASD3B,MAtBH4B,KAAAjC,IAAAC,MAuBDE,KAAAE,MAAA6B,OAAA,SAAAC,EAAAC,GACDxC,OAAAA,SAAAA,aAEQyC,QAERC,MAEEC,IAEDrD,QAJDmD,IAAAxB,GAMAyB,EAAAE,GAAc,QAAA,WACZF,EAAAA,OACDC,IAnDHjB,EAAAmB,gBAiDM7B,GACF0B,EAAaI,UA0BjB/D,EAAY6D,GAAG,QAAS,SAAUG,GAOlCA,EAAAC,iBALEjC,EAAMkC,OAQRC","file":"../javascripts/video_aqua.js","sourcesContent":["window.requirejs(\n  [\n    'common',\n    'aquaNManagerService',\n    'easyTimer',\n    'jqueryTimer'\n  ],\nfunction (Util, AquaNManagerService, Timer) {\n  // element cache1\n  var $ = $ || window.$;\n  var playerContainer = $('.videoplayer');\n  var btnPlayVideo = $('#btn_play_video');\n  var btnPlayNext = $('#btn_play_next');\n  var nextUrl = btnPlayNext.parent().attr('href');\n  var btnReplayVideo = $('#btn_replay_video');\n  var waitMessage = $('#countdown .values'); // $('.wait-message');\n  var timer = new Timer();\n  var autoplay = playerContainer.data('autoplay'); // 보안플레이어 자동 실행\n  var osName = Util.getOSName();\n\n  // var timerWait = null; // 비디오 시청 종료 후 다음 버튼을 누르도록 강요하는 타이머\n  // var timerWaitingSeconds = playerContainer.data('wait-seconds'); // 다음버튼을 노출하는데 까지 대기하는 시간\n\n  $(function () {\n    var options = {\n      videoUrl: playerContainer.data('url'),\n      trainingUserId: playerContainer.data('training-user-id'),\n      courseId: playerContainer.data('course-id'),\n      courseListId: playerContainer.data('course-list-id'),\n      videoId: playerContainer.data('id'),\n      videoStatus: playerContainer.data('status'),\n      totalPlayedSeconds: playerContainer.data('total-play')\n    };\n    AquaNManagerService = new AquaNManagerService(options);\n\n    if (playerContainer.data('confirm') == '1') {\n      $('.timer').removeClass('blind');\n\n      setTimeout(function () {\n        // timerWait = $.timer(1000 * 1, waitingTimeLogger, true);\n        timer.start({countdown: true, startValues: {seconds: 30}});\n\n        waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n\n        timer.addEventListener('secondsUpdated', function (e) {\n          waitMessage.html(timer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n        });\n\n        timer.addEventListener('targetAchieved', function (e) {\n          waitMessage.html('학습 초기화 중입니다..');\n\n          setTimeout(function () {\n            window.alert('30초 동안 다음 버튼을 누르지 않아 학습을 초기화 하였습니다.\\n\\n재시청 해주시기 바랍니다.');\n\n            axios.all([ deleteVideoLog(), deleteSessionLog() ])\n            .then(axios.spread(function (acct, perms) {\n              window.location.reload();\n            }));\n          }, 3000);\n        });\n      }, 1000);\n    }\n    showPlayBtn();\n\n    console.log(osName);\n\n    btnPlayVideo.on('click', function () {\n      timer.stop();\n      sessionProgressStartLogger();\n      AquaNManagerService.startPlayer();\n    });\n\n    if (autoplay) {\n      btnPlayVideo.click();\n    }\n  });\n\n  /**\n   * 세션 시작일시 로깅\n   */\n  function sessionProgressStartLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/starttime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      }\n    });\n  }\n\n  /**\n  * 다음버튼 클릭 시 발생 이벤트\n  */\n  btnPlayNext.on('click', function (event) {\n    event.preventDefault();\n    timer.stop();\n    // 세션 종료로그를 기록한다.\n    sessionProgressEndLogger();\n  });\n\n  /**\n   * 세션 종료일시 로깅\n   */\n  function sessionProgressEndLogger () {\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/endtime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n        window.location.href = nextUrl;\n      }\n    });\n  }\n\n  /**\n   * 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n   */\n  function showPlayBtn () {\n    if (playerContainer.data('status') === 'done') {\n      btnPlayNext.removeClass('blind');\n      btnReplayVideo.addClass('blind');\n    }\n  }\n\n  /**\n   * 정해진 시간 내에 다음 버튼을 누르지 않을 경우\n   * 학습을 초기화 하는 타이머 컨트롤러\n   */\n  function waitingTimeLogger () {\n    waitMessage.html(' ( ' + timerWaitingSeconds + ' 초 이내 클릭 )');\n\n    // 세션과 비디오 로그를 삭제한다.\n    if (timerWaitingSeconds <= 0) {\n      timerWait.stop();\n      window.alert('비디오를 재시청 해주시기 바랍니다.');\n\n      axios.all([ deleteVideoLog(), deleteSessionLog() ])\n        .then(axios.spread(function (acct, perms) {\n          console.log(acct);\n          // if (acct.data.success) {\n          var redirectUrl = '/session' +\n              '/' + playerContainer.data('training-user-id') +\n              '/' + playerContainer.data('course-id') +\n              '/' + playerContainer.data('course-list-id');\n\n          console.log(redirectUrl);\n          window.location.href = redirectUrl;\n          // }\n        }));\n    }\n\n    timerWaitingSeconds -= 1;\n  }\n\n  /**\n   * 세션 비디오 로그를 삭제한다.\n   */\n  function deleteVideoLog () {\n    return axios.delete('/video/log', {\n      params: {\n        video_id: playerContainer.data('id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  // 세션 로그를 삭제한다.\n  function deleteSessionLog () {\n    return axios.delete('/session/log', {\n      params: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n});\n"]}