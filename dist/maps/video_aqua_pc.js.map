{"version":3,"sources":["video_aqua_pc.js"],"names":["window","requirejs","Util","AquaPlayerService","Timer","templateHTML5","templateWindow","video_url","playerContainer","initPlayer","console","log","player","bindEvent","ec","msg","logger","OpenState","state","NPlayer","Opened","videoDuration","getDuration","setPlayer","Closed","timerLog","PlayState","timerLoggingInterval","sessionProgressStartLogger","reset","Stopped","Paused","videoEndTimeLogger","pause","showPlayBtn","sessionHasEnded","waitMessage","$","removeClass","secondTimer","start","countdown","startValues","seconds","addEventListener","getTimeValues","toString","e","setTimeout","html","axios","all","deleteVideoLog","deleteSessionLog","then","location","alert","spread","res1","res2","reload","timer","videoPlayTimeLogger","stop","checkVideoDuration","timerLogPlayedSeconds","getCurrentPlaybackTime","videoCurrentTime","url","ajax","type","video_id","videoId","video_duration","currenttime","data","training_user_id","trainingUserId","error","played_seconds","done","res","success","videoTotalPlayedSeconds","total_played_seconds","catch","course_list_id","btnPlayNext","hasEnded","href","course_id","nextUrl","btnReplayVideo","passiveRate","Math","floor","addClass","delete","params","response","preventDefault","parent","attr","message","content","osName","compile","Handlebars","options","callback","append","fileUrl","watermark","obj","on","event","sessionProgressEndLogger","play"],"mappings":"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","file":"../javascripts/video_aqua_pc.js","sourcesContent":["window.requirejs(\n  [\n    'common',\n    'aquaPlayerService',\n    'easyTimer',\n    'text!/win_aquaplayer_html5.html',\n    'text!/win_aquaplayer_window.html',\n    'jqueryTimer'\n  ],\nfunction (Util, AquaPlayerService, Timer, templateHTML5, templateWindow) {\n  var $ = $ || window.$;\n  var axios = axios || window.axios;\n  var osName = Util.getOSName();\n\n  var player = null;\n  var playerContainer = $('.videoplayer');\n  // var aquaHtml5 = $('#aqua-html5');\n  // var aquaWindow = $('#aqua-window');\n  var btnPlayNext = $('#btn_play_next');\n  var btnReplayVideo = $('#btn_replay_video');\n\n  var timerLoggingInterval = playerContainer.data('interval'); // log every 5 seconds\n  var timerLog = null;\n  var timerLogPlayedSeconds = 0; // 시청시간(초)\n  var secondTimer = new Timer();\n\n  var waitMessage = $('#countdown .values'); // $('.wait-message');\n  var passiveRate = playerContainer.data('passive-rate'); // 다음 버튼을 노출하는 시점\n  var sessionHasEnded = false;\n  var nextUrl = btnPlayNext.parent().attr('href');\n  var videoDuration = null; // 비디오 러닝타임\n  var videoCurrentTime; // 비디오 현재 시청시간\n  var videoId = playerContainer.data('id'); // video 테이블의 id\n  var videoTotalPlayedSeconds = playerContainer.data('total-play'); // 비디오 총 시청시간\n  // var videoLastPlayedTime = playerContainer.data('current-time'); // 마지막 재생시점\n  var trainingUserId = btnPlayNext.data('training-user-id');\n\n  function logger (message) {\n    // debuggin 목적으로만 활성화할 것!\n    // console.log('video_aqua_pc :', message);\n  }\n\n  $(function () {\n    var data = {\n      video_url: playerContainer.data('video-url'),\n      watermark: playerContainer.data('watermark')\n    };\n\n    var content;\n\n    if (osName === 'Windows') {\n      logger('window');\n      content = window.Handlebars.compile(templateHTML5);\n    } else {\n      logger('html5');\n      content = window.Handlebars.compile(templateHTML5);\n    }\n\n    // console.log(content(data));\n\n    $('#aqua-player').append(content(data));\n\n    var options = {\n      // fileUrl: $('#video').data('url'),\n      // watermark: $('#video').data('watermark'),\n      fileUrl: data.video_url,\n      watermark: data.watermark,\n      callback: function (obj) {\n        if (obj) {\n          player = obj;\n          initPlayer();\n        }\n      }\n    };\n    AquaPlayerService = new AquaPlayerService(options);\n  });\n\n  function initPlayer () {\n    console.log('initPlayer');\n    player.setVolume(0.5);\n\n    player.bindEvent('Error', function (ec, msg) {\n      logger('player:Error ' + msg);\n      console.error(msg);\n    });\n\n    player.bindEvent('OpenStateChanged', function (state) {\n      logger('player:OpenStateChanged');\n      switch (state) {\n      case window.NPlayer.OpenState.Opened:\n        logger('player:OpenStateChanged:Opened');\n\n        videoDuration = player.getDuration();\n\n        // if (videoLastPlayedTime < videoDuration - 5) {\n        //   if (window.confirm('마지막 재생시점으로 이동하시겠습니까?')) {\n        //     player.setCurrentPlaybackTime(videoLastPlayedTime);\n        //     // player.pause();\n        //   }\n        // }\n\n        setPlayer();\n        break;\n\n      case window.NPlayer.OpenState.Closed:\n        logger('player:OpenStateChanged:Closed');\n        break;\n      }\n    });\n\n    player.bindEvent('PlayStateChanged', function (state) {\n      logger('player:PlayStateChanged');\n      switch (state) {\n      case window.NPlayer.PlayState.Playing:\n        logger('player:PlayStateChanged:Playing');\n        // 세션시작로그\n        sessionProgressStartLogger();\n\n        // 로깅 시간간격 설정\n        if (timerLog) {\n          timerLog.reset(1000 * timerLoggingInterval);\n        }\n        break;\n\n      case window.NPlayer.PlayState.Stopped: // 정지\n      case window.NPlayer.PlayState.Paused:  // 일시정지\n        logger('player:PlayStateChanged:Stopped/Paused');\n\n        // 로깅 일시정지\n        timerLog.pause();\n\n        // 비디오 시청 종료일시 기록\n        videoEndTimeLogger();\n        break;\n      }\n    });\n\n    player.bindEvent('PlaybackCompleted', function () {\n      logger('player:PlaybackCompleted');\n\n      // 로깅 일시정지\n      timerLog.pause();\n\n      // 총 시청시간에 따라 다음 버튼 표시\n      showPlayBtn(videoTotalPlayedSeconds + timerLoggingInterval);\n\n      // 비디오 시청 종료일시 기록\n      videoEndTimeLogger();\n\n      // 세션 종료 시 대기 타이머 시작\n      if (!sessionHasEnded) {\n        setTimeout(function () {\n          $('.timer').removeClass('blind');\n\n          console.log('second timer started');\n          secondTimer.start({countdown: true, startValues: {seconds: 30}});\n\n          waitMessage.html(secondTimer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n\n          secondTimer.addEventListener('secondsUpdated', function (e) {\n            waitMessage.html(secondTimer.getTimeValues().toString() + ' 초 이내 <b>다음</b> 버튼을 클릭해주세요.');\n          });\n\n          secondTimer.addEventListener('targetAchieved', function (e) {\n            waitMessage.html('학습 초기화 중입니다..');\n\n            setTimeout(function () {\n              window.alert('30초 동안 다음 버튼을 누르지 않아 학습을 초기화 하였습니다.\\n\\n재시청 해주시기 바랍니다.');\n\n              axios.all([ deleteVideoLog(), deleteSessionLog() ])\n              .then(axios.spread(function (res1, res2) {\n                window.location.reload();\n              }));\n            }, 3000);\n          });\n        }, 1000);\n      }\n    });\n  }\n\n  /**\n   * Player 를 셋팅한다.\n   */\n  function setPlayer () {\n    if (videoDuration) {\n      timerLog = $.timer(1000 * timerLoggingInterval, videoPlayTimeLogger, true);\n      timerLog.stop();\n      checkVideoDuration();\n    } else {\n      console.error('을 확인할 수 없습니다.');\n    }\n  }\n\n  /**\n   * 비디오 재생시간이 존재하는지 여부 체크\n   */\n  function checkVideoDuration () {\n    // 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n    showPlayBtn(videoTotalPlayedSeconds);\n  }\n\n    /**\n   * 시청시간 로깅\n   */\n  function videoPlayTimeLogger () {\n    // console.log('video played time logging...');\n    timerLogPlayedSeconds += timerLoggingInterval;\n\n    var seconds = player.getCurrentPlaybackTime();\n\n    if ((videoCurrentTime > 0) && videoCurrentTime === seconds) {\n      player.pause();\n      btnReplayVideo.removeClass('blind');\n      return;\n    }\n\n    videoCurrentTime = seconds;\n\n    $.ajax({\n      type: 'POST',\n      url: '/video/log/playtime',\n      data: {\n        training_user_id: trainingUserId,\n        video_id: videoId,\n        played_seconds: timerLogPlayedSeconds,\n        video_duration: videoDuration,\n        currenttime: seconds\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n\n        // 오류 발생 시 타이머와 비디오 재생을 멈춘다.\n        player.pause().then(function () {\n        }).catch(function (error) {\n          console.error(error);\n        });\n      } else {\n        timerLogPlayedSeconds = 0;\n        // 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n        videoTotalPlayedSeconds = res.total_played_seconds;\n        showPlayBtn(videoTotalPlayedSeconds);\n      }\n    });\n  }\n\n  /**\n   * 비디오 시청 종료시간 로깅\n   */\n  function videoEndTimeLogger () {\n    logger('videoEndTimeLogger');\n\n    $.ajax({\n      type: 'POST',\n      url: '/video/log/endtime',\n      data: {\n        video_id: videoId\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n      // console.info('종료시간 기록!');\n      }\n    });\n  }\n\n  /**\n   * 세션 시작일시 로깅\n   */\n  function sessionProgressStartLogger () {\n    logger('sessionProgressStartLogger');\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/starttime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n        // 오류 발생 시 타이머와 비디오 재생을 멈춘다.\n        timerLog.stop();\n        player.stop();\n      } else {\n        sessionHasEnded = res.hasEnded; // 세션 종료여부\n      }\n    });\n  }\n\n/**\n * 다음버튼 클릭 시 발생 이벤트\n */\n  btnPlayNext.on('click', function (event) {\n    logger('btnPlayNext:click');\n    event.preventDefault();\n    secondTimer.stop();\n    // 세션 종료로그를 기록한다.\n    sessionProgressEndLogger();\n  });\n\n  /**\n   * 세션 종료일시 로깅\n   */\n  function sessionProgressEndLogger () {\n    logger('sessionProgressEndLogger');\n    $.ajax({\n      type: 'POST',\n      url: '/session/log/endtime',\n      data: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_id: playerContainer.data('course-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    }).done(function (res) {\n      if (!res.success) {\n        console.error(res.msg);\n      } else {\n        window.location.href = nextUrl;\n      }\n    });\n  }\n\n  /**\n   * 총 릴타임의 80% 이상을 시청한 경우 다음버튼을 활성화 한다.\n   */\n  function showPlayBtn () {\n    logger('showPlayBtn');\n    logger('videoDuration:' + videoDuration);\n    logger('passiveRate:' + passiveRate);\n    logger('videoTotalPlayedSeconds:' + videoTotalPlayedSeconds);\n\n    if (Math.floor(videoDuration * (passiveRate / 100)) <= videoTotalPlayedSeconds) {\n      btnPlayNext.removeClass('blind');\n      btnReplayVideo.addClass('blind');\n    }\n  }\n\n  /**\n   * 세션 비디오 로그를 삭제한다.\n   */\n  function deleteVideoLog () {\n    logger('deleteVideoLog');\n    return axios.delete('/video/log', {\n      params: {\n        video_id: playerContainer.data('id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  // 세션 로그를 삭제한다.\n  function deleteSessionLog () {\n    logger('deleteSessionLog');\n    return axios.delete('/session/log', {\n      params: {\n        training_user_id: playerContainer.data('training-user-id'),\n        course_list_id: playerContainer.data('course-list-id')\n      }\n    })\n    .then(function (response) {\n    })\n    .catch(function (error) {\n      console.error(error);\n    });\n  }\n\n  btnReplayVideo.on('click', function (e) {\n    e.preventDefault();\n\n    player.play();\n    btnReplayVideo.addClass('blind');\n  });\n});\n"]}